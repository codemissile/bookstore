name: Deploy Catalog Service

on:
  push:
    branches:
      - main
    paths:
      - "backend/catalog-service/**"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build and push Docker image
        run: |
          cd backend/catalog-service
          docker build -t ${{ secrets.ECR_REPOSITORY }}:latest .
          docker push ${{ secrets.ECR_REPOSITORY }}:latest

      - name: Configure Kubernetes (kubectl)
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

      - name: Check IAM roles
        run: aws eks update-kubeconfig --name bookstore-cluster --region eu-west-2

      - name: Deploy new (green) version
        run: |
          kubectl apply -f k8s/services/catalog-service-green.yaml

      - name: Wait for green deployment to be ready
        run: |
          kubectl rollout status deployment/catalog-service-green --timeout=90s

      - name: Run tests on green deployment
        run: |
          kubectl port-forward svc/catalog-service 5001:5000 &
          sleep 5
          curl -f http://localhost:5001/health || exit 1

      - name: Switch traffic to green if tests pass
        run: |
          sed -i 's/version: blue/version: green/' k8s/services/catalog-service-service.yaml
          kubectl apply -f k8s/services/catalog-service-service.yaml

      - name: Rollback on failure
        if: failure()
        run: |
          sed -i 's/version: green/version: blue/' k8s/services/catalog-service-service.yaml
          kubectl apply -f k8s/services/catalog-service-service.yaml
